<Window
    x:Class="FamilyExpenses.Views.CreateProductWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:validators="clr-namespace:FamilyExpenses.ViewModels.ValidationRules"
    xmlns:covnerters="clr-namespace:FamilyExpenses.ViewModels.Converters"
    Title="New product"
    Height="170"
    Width="370"
    ResizeMode="NoResize">
    <Window.Resources>
        <covnerters:ProductInfoConverter
            x:Key="ProductInfoConverter" />
    </Window.Resources>
    <Grid>
        <Label
            Content="Name:"
            HorizontalAlignment="Left"
            Margin="10,10,0,0"
            VerticalAlignment="Top" />
        <Label
            Content="Type:"
            HorizontalAlignment="Left"
            Margin="10,38,0,0"
            VerticalAlignment="Top" />
        <TextBox
            Name="_productNameTextBox"
            HorizontalAlignment="Left"
            Height="23"
            Margin="75,14,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="155">
            <TextBox.Text>
                <Binding
                    Path="Text"
                    ElementName="_productNameTextBox">
                    <Binding.ValidationRules>
                        <validators:RegexValidator
                            RegexPattern="^ *[\w\d]+( [\w\d]+)* *$"
                            ErrorMessage="Product name can contain only alphanumeric characters!"
                            ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            <TextBox.Style>
                <Style
                    TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger
                            Property="Validation.HasError"
                            Value="True">
                            <Setter
                                Property="ToolTip"
                                Value="{Binding ElementName=_productNameTextBox, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Label
            Content="Producer:"
            HorizontalAlignment="Left"
            Margin="10,66,0,0"
            VerticalAlignment="Top" />
        <ComboBox
            Name="_productTypeComboBox"
            HorizontalAlignment="Left"
            Margin="75,42,0,0"
            VerticalAlignment="Top"
            Width="155"
            SelectedIndex="0"
            ItemsSource="{Binding ProductTypes, Source={StaticResource MainViewModel}}" />
        <ComboBox
            Name="_producerComboBox"
            HorizontalAlignment="Left"
            Margin="75,70,0,0"
            VerticalAlignment="Top"
            Width="155"
            ItemsSource="{Binding AllProducers, Source={StaticResource MainViewModel}}"
            DisplayMemberPath="Name">
            <ComboBox.SelectedValue>
                <Binding
                    Path="SelectedValue"
                    ElementName="_producerComboBox"
                    UpdateSourceTrigger="LostFocus">
                    <Binding.ValidationRules>
                        <validators:ConstantValueValidator
                            ErrorWhenEqual="True"
                            ErrorMessage="A producer must be selected!"
                            ValidatesOnTargetUpdated="True" />
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.SelectedValue>
            <ComboBox.Style>
                <Style
                    TargetType="{x:Type ComboBox}">
                    <Style.Triggers>
                        <Trigger
                            Property="Validation.HasError"
                            Value="True">
                            <Setter
                                Property="ToolTip"
                                Value="{Binding ElementName=_producerComboBox, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <Button
            Content="New producer"
            HorizontalAlignment="Left"
            Margin="235,70,0,0"
            VerticalAlignment="Top"
            Width="99"
            Height="22"
            Click="_NewProducerButtonClick"/>
        <Button
            Content="Add"
            IsDefault="True"
            HorizontalAlignment="Left"
            Margin="75,97,0,0"
            VerticalAlignment="Top"
            Width="75"
            Command="{Binding AddProductCommand, Source={StaticResource MainViewModel}}"
            Click="_AddProductButtonClick">
            <Button.CommandParameter>
                <MultiBinding
                    Converter="{StaticResource ProductInfoConverter}">
                    <Binding
                        Path="Text"
                        ElementName="_productNameTextBox" />
                    <Binding
                        Path="SelectedItem"
                        ElementName="_productTypeComboBox" />
                    <Binding
                        Path="SelectedItem"
                        ElementName="_producerComboBox" />
                </MultiBinding>
            </Button.CommandParameter>
            <Button.Style>
                <Style
                    TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding ElementName=_productNameTextBox, Path=(Validation.HasError)}"
                                    Value="False" />
                                <Condition
                                    Binding="{Binding ElementName=_producerComboBox, Path=(Validation.HasError)}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="IsEnabled"
                                Value="True" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                    <Setter
                        Property="IsEnabled"
                        Value="False" />
                </Style>
            </Button.Style>
        </Button>
        <Button
            Content="Cancel"
            IsCancel="True"
            HorizontalAlignment="Left"
            Margin="155,97,0,0"
            VerticalAlignment="Top"
            Width="75" />
    </Grid>
</Window>
